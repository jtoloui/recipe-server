AWSTemplateFormatVersion: "2010-09-09"
Description: S3 bucket with CORS and lifecycle rules
Resources:
  s3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Statement:
          - Sid: "Allow get requests originating from all domains"
            Effect: "Allow"
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
            Condition:
              StringLike:
                aws:Referer:
                  - !Ref AllowedOrigins

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - x-amz-*
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins: !Ref AllowedOrigins
            ExposedHeaders:
              - x-amz-server-side-encryption
              - x-amz-request-id
              - x-amz-id-2
            Id: myCORSRuleId1
            MaxAge: 3600
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            Prefix: "images/"
            Id: "Delete images after 30 days"
            NoncurrentVersionExpiration:
              NoncurrentDays: 30
              NewerNoncurrentVersions: 3
      Tags:
        - Key: Name
          Value: !Ref BucketName
Outputs:
  BucketName:
    Value: !Ref S3Bucket
    Description: Name of the sample Amazon S3 bucket with CORS enabled.

Parameters:
  BucketName:
    Description: "Bucket Name for image upload"
    Type: String
    Default: "justcook-bucket-dev"
  AllowedOrigins:
    Description: "Allowed origins for CORS"
    Type: CommaDelimitedList
    Default: "https://localhost:3000,https://www.justcook.ing"
